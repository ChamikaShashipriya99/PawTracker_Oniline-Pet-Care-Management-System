import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import axios from 'axios';
import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';

function Profile() {
  const user = JSON.parse(localStorage.getItem('user'));
  const navigate = useNavigate();
  const [pets, setPets] = useState([]);

  useEffect(() => {
    if (!user) {
      navigate('/login');
      return;
    }

    const fetchPets = async () => {
      try {
        const res = await axios.get(`http://localhost:5000/api/users/pets/${user._id}`);
        setPets(res.data);
      } catch (error) {
        console.error('Failed to fetch pets:', error.message);
      }
    };
    fetchPets();
  }, [navigate, user]);

  if (!user) return null;

  const handleDeleteAccount = async () => {
    if (window.confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
      try {
        await axios.delete(`http://localhost:5000/api/users/${user._id}`);
        localStorage.removeItem('user');
        alert('Account deleted successfully!');
        navigate('/login');
      } catch (error) {
        alert('Delete failed: ' + error.message);
      }
    }
  };

  const handleDownloadProfile = () => {
    const doc = new jsPDF();
    doc.setFontSize(18);
    doc.setTextColor(0, 123, 255);
    doc.text('Pet Care User Profile', 105, 20, { align: 'center' });
    doc.setFontSize(12);
    doc.setTextColor(85, 85, 85);
    doc.text(`Profile for ${user.username}`, 105, 30, { align: 'center' });

    const profileData = [
      ['First Name', user.firstName],
      ['Last Name', user.lastName],
      ['Username', user.username],
      ['Email', user.email],
      ['Phone', user.phone]
    ];

    autoTable(doc, {
      startY: 40,
      head: [['Field', 'Value']],
      body: profileData,
      theme: 'grid',
      styles: { fontSize: 10, cellPadding: 3 },
      headStyles: { fillColor: [0, 123, 255], textColor: [255, 255, 255] },
      alternateRowStyles: { fillColor: [240, 240, 240] },
    });

    if (pets.length > 0) {
      doc.setFontSize(14);
      doc.setTextColor(0, 123, 255);
      doc.text('Your Pets', 105, doc.lastAutoTable.finalY + 20, { align: 'center' });

      const petData = pets.map(pet => [
        pet.petName,
        pet.breed,
        new Date(pet.birthday).toLocaleDateString(),
        pet.age,
        `${pet.weight} kg`,
        pet.specialConditions || 'None'
      ]);

      autoTable(doc, {
        startY: doc.lastAutoTable.finalY + 30,
        head: [['Pet Name', 'Breed', 'Birthday', 'Age', 'Weight', 'Special Conditions']],
        body: petData,
        theme: 'grid',
        styles: { fontSize: 10, cellPadding: 3 },
        headStyles: { fillColor: [0, 123, 255], textColor: [255, 255, 255] },
        alternateRowStyles: { fillColor: [240, 240, 240] },
      });
    } else {
      doc.setFontSize(12);
      doc.setTextColor(85, 85, 85);
      doc.text('No pets added yet.', 105, doc.lastAutoTable.finalY + 20, { align: 'center' });
    }

    doc.setFontSize(8);
    doc.setTextColor(85, 85, 85);
    doc.text('Generated by Online Pet Care System', 105, doc.internal.pageSize.height - 10, { align: 'center' });
    doc.save(`${user.username}_profile.pdf`);
    alert('Profile and pet details downloaded as PDF!');
  };

  return (
    <div className="container mt-5">
      <div className="card shadow p-4" style={{ borderRadius: '15px' }}>
        <h2 className="text-center mb-4" style={{ color: '#007bff' }}>Profile üêæ</h2>
        <div className="card-body">
          {user.profilePhoto && (
            <div className="text-center mb-4">
              <img src={`http://localhost:5000${user.profilePhoto}`} alt="Profile" className="img-fluid rounded-circle" style={{ maxWidth: '150px', border: '2px solid #007bff' }} />
            </div>
          )}
          <p><strong>First Name:</strong> {user.firstName}</p>
          <p><strong>Last Name:</strong> {user.lastName}</p>
          <p><strong>Username:</strong> {user.username}</p>
          <p><strong>Email:</strong> {user.email}</p>
          <p><strong>Phone:</strong> {user.phone}</p>
          <h3 className="mt-4" style={{ color: '#007bff' }}>My Pets</h3>
          {pets.length === 0 ? (
            <p>No pets added yet.</p>
          ) : (
            <div className="row">
              {pets.map(pet => (
                <div key={pet._id} className="col-md-4 mb-3">
                  <div className="card" style={{ borderRadius: '10px' }}>
                    {pet.petPhoto && (
                      <img src={`http://localhost:5000${pet.petPhoto}`} alt={pet.petName} className="card-img-top" style={{ borderRadius: '10px 10px 0 0', maxHeight: '150px', objectFit: 'cover' }} />
                    )}
                    <div className="card-body">
                      <h5 className="card-title">{pet.petName}</h5>
                      <p className="card-text"><strong>Breed:</strong> {pet.breed}</p>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          )}
          <div className="d-flex justify-content-between flex-wrap mt-4">
            <Link to="/update-profile" className="btn btn-primary m-1" style={{ borderRadius: '10px' }}>Update Profile</Link>
            <Link to="/add-pet" className="btn btn-success m-1" style={{ borderRadius: '10px' }}>Add Pet</Link>
            <Link to="/my-pets" className="btn btn-info m-1" style={{ borderRadius: '10px' }}>My Pets</Link>
            <button onClick={handleDownloadProfile} className="btn btn-success m-1" style={{ borderRadius: '10px' }}>Download Profile Details</button>
            <button onClick={handleDeleteAccount} className="btn btn-danger m-1" style={{ borderRadius: '10px' }}>Delete Profile</button>
          </div>
        </div>
      </div>
      <br></br>
      <br></br>
    </div>
  );
}

export default Profile;